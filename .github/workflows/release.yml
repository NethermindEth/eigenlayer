name: Release eigenlayer

on:
  workflow_dispatch:
    inputs:
      tag:
        description: The version number (e.g. v1.2.3) of the release you want to push
        required: true
        default: master

permissions:
  contents: write
  packages: write

jobs:
  eigenlayer-linux:
    name: Build eigenlayer
    strategy:
      matrix:
        os: [ubuntu-latest]
        go: ["1.20"]
    runs-on: ${{ matrix.os }}
    env:
      VERSION: ${{ github.event.inputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - name: Install dependencies
        run: make install-deps
      - name: Generate mocks
        run: make generate
      - name: Check go mod status
        run: |
          make gomod_tidy
          if [[ ! -z $(git status -s | grep 'go.mod') ]] || [[ ! -z $(git status -s | grep 'go.sum') ]];
          then
            echo "Changes on go.mod or go.sum files - state is not clean:"
            git status -s
            git diff "$GITHUB_SHA"
            exit 1
          fi
        shell: bash
      - name: Unit tests
        run: make unit-test
      - name: E2E tests
        run: make e2e-test
      - name: Build linux amd64
        run: make build-linux-amd64
      - name: Build linux arm64
        run: make build-linux-arm64
      - name: Upload eigenlayer-linux-amd64
        uses: actions/upload-artifact@v3
        with:
          name: eigenlayer-${{env.VERSION}}-linux-amd64
          path: build/eigenlayer-linux-amd64
      - name: Upload eigenlayer-linux-arm64
        uses: actions/upload-artifact@v3
        with:
          name: eigenlayer-${{env.VERSION}}-linux-arm64
          path: build/eigenlayer-linux-arm64
  publish-github:
    name: Pre-release eigenlayer and upload binaries to GitHub
    needs: eigenlayer-linux
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.event.inputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: /tmp/artifacts
      - name: Generate changelog 
        run: |
          awk '/## \[Unreleased\]/ {flag=1;next} /## \[/ {flag=0} flag' CHANGELOG.md > /tmp/changelog
          echo -e "## [${{env.VERSION}}]\n$(cat /tmp/changelog)" > /tmp/changelog
      - name: Create pre-release
        uses: ncipollo/release-action@v1
        with:
          artifacts: /tmp/artifacts/eigenlayer-*/*
          bodyFile: /tmp/changelog
          draft: true
          tag: ${{ github.event.inputs.tag }}
          name: ${{ github.event.inputs.tag }}
